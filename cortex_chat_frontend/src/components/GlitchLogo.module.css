/* src/components/GlitchLogo.module.css */
:root {
  --f-size-glitch: 5; 
  --f-unit-glitch: 1vmin; /* Using vmin can be tricky for fixed top-left logo */
  --f-glitch: calc(var(--f-size-glitch) * var(--f-unit-glitch));
  --bg-glitch-effect: #070b12; /* Match Vanta background or make transparent */
}

.logoContainer {
  position: relative;
  width: 280px; /* Adjust overall width of the logo + disk area */
  height: 100px; /* Adjust overall height of the logo + disk area */
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 25px; /* Space between logo and buttons */
  /* background-color: rgba(255,0,0,0.1); */ /* For debugging layout */
}

.blackHole {
  position: absolute;
  /* Centered within its logoContainer parent */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 130px;  /* Diameter of the black hole disk */
  height: 130px; /* Diameter of the black hole disk */
  background: radial-gradient(circle, #000000 20%, transparent 30%),
              radial-gradient(circle, rgba(255, 50, 50, 0.25) 50%, transparent 70%);
  border-radius: 50%;
  box-shadow: 0 0 15px rgba(255, 50, 50, 0.3), 0 0 30px rgba(255, 255, 255, 0.1);
  z-index: 1;
  animation: rotateDisk 25s linear infinite, pulseDisk 6s ease-in-out infinite;
  overflow: hidden;
}

@keyframes rotateDisk {
  from { transform: translate(-50%, -50%) rotate(0deg); }
  to { transform: translate(-50%, -50%) rotate(360deg); }
}

@keyframes pulseDisk {
  0%, 100% { box-shadow: 0 0 15px rgba(255, 50, 50, 0.3), 0 0 30px rgba(255, 255, 255, 0.1); }
  50% { box-shadow: 0 0 25px rgba(255, 50, 50, 0.5), 0 0 50px rgba(255, 255, 255, 0.2); }
}

.glitchText {
  font-family: 'Bungee Shade', cursive;
  font-size: 40px; /* Fixed font size for CortexChat text */
  /* --f-glitch variable from :root can be used if dynamic sizing is preferred, but fixed might be easier here */
  /* font-size: var(--f-glitch); */
  line-height: .75;
  color: #ffffff;
  text-align: center;
  transform: scaleX(var(--scale, 1));
  animation: glitch-p 11s infinite alternate;
  position: relative; /* Stays in flow, centered by parent's flex */
  z-index: 2; /* Above black hole disk */
  margin: 0; /* Reset margin */
  /* white-space: nowrap; /* Prevent text wrapping if container is too small */
}

/* Glitch effect styles from your HTML */
.glitchText::before,
.glitchText::after {
  --top: 0;
  --left: 0;
  --v-height: 30%; /* Default vertical height of glitch slice */
  --f-size-glitch-calc: 40; /* Corresponds to font-size for calculation context */
  --n-tenth: calc(var(--f-size-glitch-calc) * .1 * var(--top));
  --t-cut: calc(var(--n-tenth) / var(--f-size-glitch-calc) * 100%);
  --b-cut: calc(var(--t-cut) + var(--v-height));

  content: attr(data-text);
  position: absolute;
  width: 100%;
  left: 0;
  text-align: center;
  transform: translateX(calc(var(--left) * 100%));
  filter: drop-shadow(0 0 transparent);
  text-shadow: calc(var(--left) * -1em) 0 .02em lime, /* Adjusted em for text-shadow */
               calc(var(--left) * -2em) 0 .02em #fe0000; /* Adjusted em */
  background-color: var(--bg-glitch-effect); /* Use variable or make transparent */
  clip-path: polygon(0% var(--t-cut), 100% var(--t-cut), 100% var(--b-cut), 0% var(--b-cut));
}

.glitchText::before {
  animation: glitch-b 1.7s infinite alternate-reverse;
}

.glitchText::after {
  animation: glitch-a 3.1s infinite alternate;
}

@keyframes glitch-p {
  17% { --scale: .87; }
  31% { --scale: 1.1; }
  37% { --scale: 1.3; }
  47% { --scale: .91; }
  87% { --scale: 1; }
}

@keyframes glitch-a {
  10%,30%,50%,70%,90% { --top: 0; --left: 0; }
  0% { --v-height: 15%; }
  20% { --left: .005; }
  40% { --left: .01; --v-height: 20%; --top: 3; }
  60% { --left: .03; --v-height: 25%; --top: 6; }
  80% { --left: .07; --v-height: 5%; --top: 8; }
  100% { --left: .083; --v-height: 30%; --top: 1; }
}

@keyframes glitch-b {
  10%,30%,50%,70%,90% { --top: 0; --left: 0; }
  0% { --v-height: 15%; --top: 10; }
  20% { --left: -.005; }
  40% { --left: -.01; --v-height: 17%; --top: 3; }
  60% { --left: -.03; --v-height: 35%; --top: 6; }
  80% { --left: -.07; --v-height: 5%; --top: 8; }
  100% { --left: -.083; --v-height: 30%; --top: 1; }
}